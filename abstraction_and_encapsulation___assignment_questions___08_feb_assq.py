# -*- coding: utf-8 -*-
"""Abstraction and Encapsulation  | Assignment Questions | 08 Feb_AssQ.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VQA89jvBqICnJRriamKbFmRb5kkC08lH

Q1. What is Abstraction in OOps? Explain with an example.

Abstraction in OOPs is when we focus on the essential qualities of an object and hide the unnecessary details. It's like using a TV remote without knowing how it works internally. You just need to know the buttons to change channels and adjust the volume.

Q2. Differentiate between Abstraction and Encapsulation. Explain with an example.
"""

#Abstraction focuses on showing only the essential features of an object, hiding unnecessary details. For instance, a car's interface (steering wheel, pedals) abstracts away the engine's internal complexities.

#Encapsulation involves bundling data and methods within a class, preventing direct external access. It's like a phone where you use the screen and buttons, but can't directly manipulate the internal circuits.

"""
Q3. What is abc module in python? Why is it used?"""

#In Python, the abc module stands for "Abstract Base Classes." It is used to create abstract classes, which are classes that cannot be instantiated directly but provide a common interface for their subclasses. It helps enforce a specific structure or behavior that subclasses should adhere to.

"""Q4. How can we achieve data abstraction?"""

#Data abstraction means hiding the complex details of how data is stored and accessed, so users can interact with simplified interfaces. It's like using a remote control without knowing how the TV works inside.

"""Q5. Can we create an instance of an abstract class? Explain your answer"""

#No, we cannot create an instance of an abstract class. An abstract class is like a blueprint for other classes, and it's incomplete, lacking implementation for some methods. It's like trying to build a house without a complete plan; it won't work!

